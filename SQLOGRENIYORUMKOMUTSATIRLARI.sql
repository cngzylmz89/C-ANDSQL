--select count(*) As 'Toplam Kişi' from TBLOGRENCILER --AS başlığı belirler
--select count(*) As 'Toplam kisi' from TBLOGRENCILER where OGRSEHIR='TOKAT'
--select sum(SINAV1) AS 'Toplam kişi', SUM(SINAV2) AS 'Toplam kişi', SUM(SINAV3) AS 'Toplam kişi' FROM TBLNOTLAR
--SELECT AVG(SINAV1), AVG(SINAV2), AVG(SINAV3) FROM TBLNOTLAR
--SELECT min(SINAV1), min(SINAV2), min(SINAV3) FROM TBLNOTLAR
--SELECT max(SINAV1), max(SINAV2), max(SINAV3) FROM TBLNOTLAR

--update TBLNOTLAR set ORTALAMA=(SINAV1+SINAV2+SINAV3)/3
--update TBLNOTLAR set DURUM=1 where ORTALAMA>=50
--update TBLNOTLAR set DURUM=0 where ORTALAMA<50

--GROUP BY, AS
--SELECT DURUM, COUNT(*) AS 'TOPLAM'  FROM TBLNOTLAR GROUP BY DURUM

--HAVING
--SELECT OGRCINSIYET, COUNT(*) AS'TOPLAM' FROM TBLOGRENCILER GROUP BY OGRCINSIYET HAVING OGRCINSIYET='ERKEK'
--SELECT OGRSEHIR, COUNT(*) FROM TBLOGRENCILER GROUP BY OGRSEHIR HAVING COUNT(*)=2
--SELECT DURUM, COUNT(*) AS 'GEÇENLER' FROM TBLNOTLAR GROUP BY DURUM HAVING DURUM=1

--LIKE
--SELECT * FROM TBLOGRENCILER WHERE OGRAD like 'a%'--başında a olanları getir
--SELECT * FROM TBLOGRENCILER WHERE OGRKULUP like '%a%'--ortasında a geçenler
--SELECT * FROM TBLOGRENCILER WHERE OGRSOYAD not like '%b%'-- ortasında b geçmeyenler

--DISTINCT
--SELECT OGRKULUP AS 'KULÜPLER' FROM TBLOGRENCILER
--SELECT DISTINCT OGRKULUP AS 'KULÜPLER' FROM TBLOGRENCILER--DISTINCT BİLGİLERİ TEKRARSIZ VERİR
--SELECT COUNT(OGRSEHIR) AS 'SEHİRLER' FROM TBLOGRENCILER
--SELECT COUNT(DISTINCT OGRSEHIR) AS 'SEHİRLER' FROM TBLOGRENCILER
--SELECT  OGRSEHIR FROM TBLOGRENCILER order by OGRAD ASC--sehırlerı öğrenci adının sentaksına 
--sıralar

--ORDER BY ASCENDING(ASC a'dan z'ye), DESCENDING(DESC z'den a'ya)
--SELECT  OGRSEHIR FROM TBLOGRENCILER order by OGRAD ASC--sehırlerı öğrenci adının sentaksına 
--sıralar
--SELECT OGRKULUP FROM TBLOGRENCILER order by OGRKULUP DESC--KULUPLERI  z'den a'ya sıralar
--SELECT  OGRSEHIR FROM TBLOGRENCILER order by OGRSEHIR ASC--kulüpleri a'dan z'ye sıralar

--LİKE İŞARETLERİNİN TÜREVLERİ
--SELECT * FROM TBLOGRENCILER WHERE OGRSEHIR like '%an_%'--içinde an geçip devamı olan şehirleri getiririr.
--SELECT * FROM TBLOGRENCILER WHERE OGRAD like '[C,A]%'--baş harfi c ya da a olanları getir. yüzde işaretinin yerine göre başta,
----ortada veya sonda olacak şekilde arama yapabiliriz.
--SELECT * FROM TBLOGRENCILER WHERE OGRKULUP like '[A-H]%'-- tire işareti iki harf arasındaki bütün harfleri alır ve arama yapar
--a ile h arasında başlayan bütün kulüpleri getir. Yüzde işaretinin yeri başta, ortada veya sonda arama yapacağımızı belirtir.

--TOP VE PERCENT- EN ÜSTTEKİ VE YÜZDE DEKİ 
--SELECT TOP 4 * from TBLOGRENCILER -- en üstteki 4 değeri getir
--SELECT TOP 3 * FROM TBLOGRENCILER order by OGRID desc -- ıd değerine göre z den a ya en üstteki 3 
----değeri getir
--SELECT TOP 65 PERCENT * FROM TBLOGRENCILER-- en üstteki yüzde 65 değeri getir.

--İN, NOT İN
--SELECT * FROM TBLOGRENCILER WHERE OGRSEHIR in('İzmir', 'İstanbul')--ogrsehir izmir ve istanbul olanları
----getir
--SELECT * FROM TBLNOTLAR WHERE SINAV1 in(85,45,56)--sınav1 notu bunlar olanları getir
--SELECT * FROM TBLOGRENCILER WHERE OGRKULUP not in('satranç')-- kulübü satranç olmayanları getir


--BETWEEN ARASINDA

--SELECT * FROM TBLOGRENCILER WHERE OGRAD BETWEEN 'A' AND 'B'--ADI A İLE B ARASINDA BAŞLAYANLAR GETİR B DAHİL DEĞİL
--SELECT * FROM TBLNOTLAR WHERE ORTALAMA BETWEEN 40 AND 90-- ORTALAMASI 40 İLE 90 ARASINDA OLANLARI GETİR  ""
--SELECT * FROM TBLOGRENCILER WHERE OGRKULUP NOT BETWEEN 'B' AND 'G'--KULÜP ADI B İLE G ARASINDA BAŞLAYANLARI GETİR ""

--İLİŞKİLİ TABLOLAR
--TABLO COLUMN BİRLEŞTİRME

--SELECT OGRAD+' '+OGRSOYAD AS 'ÖĞRENCİ AD SOYAD', SINAV1, SINAV2, SINAV3 FROM TBLNOTLAR INNER JOIN TBLOGRENCILER
--ON TBLOGRENCILER.OGRID=TBLNOTLAR.OGRENCIAD --TBLNOTLAR içindeki öğrenci id numaralarını TBLOGRENCILER içindeki ad
---- birleştirerek getirebilisiniz.

--SUB QUERRY(ALT SORGU)
--select * FROM TBLNOTLAR WHERE OGRDERS=(SELECT DERSID FROM TBLDERSLER WHERE DERSAD='MATEMATİK')


--UPDATE TBLNOTLAR SET ORTALAMA=(SINAV1+SINAV2+SINAV3)/3
--UPDATE TBLNOTLAR SET DURUM=1 WHERE ORTALAMA>=50
--UPDATE TBLNOTLAR SET DURUM=0 WHERE ORTALAMA<55

-- INNER JOIN(R∩L), LEFT JOIN(L), RIGHT JOIN(R), FULL JOIN(R∪L),---- UNION(İKİ TABLOYU BİRLEŞTİRME)

--SELECT * FROM TBLNOTLAR INNER JOIN TBLOGRENCILER ON TBLOGRENCILER.OGRID=TBLNOTLAR.OGRENCIAD
----İKİ TABLONUN KESİŞİMİNİ ALIR.
--SELECT * FROM TBLNOTLAR RIGHT JOIN TBLOGRENCILER ON TBLOGRENCILER.OGRID=TBLNOTLAR.OGRENCIAD
----SAĞDAKİ TABLOYU ESAS ALAN BİRLEŞİM
--SELECT * FROM TBLNOTLAR LEFT JOIN TBLOGRENCILER ON TBLOGRENCILER.OGRID=TBLNOTLAR.OGRENCIAD
----SOLDAKİ TABLOYU ESAS ALAN BİRLEŞİM
--SELECT * FROM TBLNOTLAR FULL JOIN TBLOGRENCILER ON TBLOGRENCILER.OGRID=TBLNOTLAR.OGRENCIAD
----İKİ TABLONUN BİRLEŞİMİ ALIR

----UNION İKİ SORGUYU BİRLEŞTİRME
--SELECT * FROM TBLDERSLER 
-- SELECT * FROM TBLKULUPLER
-- SELECT * FROM TBLDERSLER UNION  SELECT * FROM TBLKULUPLER--İKİ SORGUYU BİRLEŞTİREREK ALIR



----SELECT AVG(ORTALAMA) AS 'DERSLER' FROM TBLNOTLAR WHERE OGRDERS=2 
--UPDATE TBLNOTLAR SET DERSDURUM='DERS GEÇTİNİZ' WHERE OGRDERS=5 AND ORTALAMA>(SELECT AVG(ORTALAMA) FROM TBLNOTLAR WHERE OGRDERS=5)
--UPDATE TBLNOTLAR SET DERSDURUM='DERSTEN KALDINIZ' WHERE OGRDERS=5 AND ORTALAMA<(SELECT AVG(ORTALAMA) FROM TBLNOTLAR WHERE OGRDERS=5) 
--SELECT OGRENCIAD AS 'ÖĞRENCİ AD', DERSDURUM AS 'DERSLER' FROM TBLNOTLAR WHERE DERSDURUM='DERSİ GEÇTİNİZ'
-- SELECT OGRENCIAD AS 'ÖĞRENCİ AD', DERSDURUM AS 'DERSLER' FROM TBLNOTLAR WHERE DERSDURUM='DERSTEN KALDINIZ'
 --SELECT * FROM TBLNOTLAR WHERE DERSDURUM='DERSTEN KALDINIZ'

 --MATEMATİKSEL FONKSİYONLAR

 --SELECT ABS(-85) AS 'MUTLAK DEĞER'--ABSOLUTE-MUTLAK DEĞERİNİ ALIR
 --SELECT POWER(2,4) AS 'ÜSTÜ'--ÜSTÜNÜ ALIR. İLK SAYI ÜSTÜ ALINACAK SAYI, İKİNCİSİ ÜST MİKTARI
 --SELECT POWER(SINAV1,2) FROM TBLNOTLAR--
 --SELECT SQRT(625) AS 'KAREKÖK'
 --SELECT FLOOR(4.85) AS 'TABANA YUVARLA', CEILING(4.85) AS 'TAVANA YUVARLA'

 -- SUM(TOPLAMA) VE AVG(ORTALAMA) KOMUTLARI

--SELECT OGRAD+' '+OGRSOYAD AS 'ADI SOYADI', SUM(SINAV1) AS 'SINAV1 TOPLAMI' FROM TBLNOTLAR INNER JOIN TBLOGRENCILER 
--ON TBLNOTLAR.OGRENCIAD=TBLOGRENCILER.OGRID
--WHERE OGRENCIAD=(SELECT OGRID FROM TBLOGRENCILER WHERE OGRAD='CENGİZ'
-- AND OGRSOYAD='YILMAZ' )  GROUP BY OGRAD+' '+OGRSOYAD  
----NOTLAR TABLOSUNDAN OGRENCIAD I OGRENCILER TABLOSUNDAKİ OGRADI CENGİZ VE SOYADI YILMAZ OLAN SIRANIN OGRID SI OLACAK 
----ŞEKİLDE SEÇ VE GETİR
--SELECT OGRAD+' '+OGRSOYAD, AVG(ORTALAMA) AS 'ORTALAMANIN ORTALAMASI' FROM TBLNOTLAR INNER JOIN TBLOGRENCILER
-- ON TBLNOTLAR.OGRENCIAD=TBLOGRENCILER.OGRID WHERE OGRENCIAD=(SELECT OGRID FROM TBLOGRENCILER WHERE OGRAD='AYŞENUR' 
--AND OGRSOYAD='YILMAZ') GROUP BY OGRAD+' '+OGRSOYAD 
----AVERAGE AVG ORTALAMA ALIR.

--ALFABETİK FONKSİYONLAR

--UPPER(OGRAD)  AS 'ÖĞRENCİ ADI', LOWER(OGRSOYAD) AS 'ÖĞRENCİ SOYAD' FROM TBLOGRENCILER 
--UPPER hepsini büyük harfe çevirir, LOWER hepsini küçük harfe çevirir.
--SELECT UPPER(OGRSEHIR) AS 'ŞEHİR', LOWER(KULUPAD) AS 'KÜLUBÜ' FROM TBLOGRENCILER  
--INNER JOIN TBLKULUPLER ON TBLKULUPLER.ID=TBLOGRENCILER.OGRKULUP 
--WHERE OGRSEHIR='TOKAT' AND OGRKULUP=(SELECT ID FROM TBLKULUPLER WHERE KULUPAD='GEZİ')

--SUBSTRING -> Stringi böler.

--SELECT SUBSTRING(OGRAD, 1, 1)+'. '+OGRSOYAD AS 'ADI SOYADI', SUBSTRING(KULUPAD, 1,3) AS 'KULÜBÜ' 
--FROM TBLOGRENCILER INNER JOIN TBLKULUPLER
--ON TBLKULUPLER.ID=TBLOGRENCILER.OGRKULUP
----SUBSTRING(HANGİ SÜTUN, KAÇINCI KARAKTERDEN SONRA ALACAK, NE KADAR KARAKTER ALACAK)
--SELECT SUBSTRING(OGRAD,2,2) AS 'AD' FROM TBLOGRENCILER

-- LEFT VE RIGHT -> SAĞDAN VE SOLDAN KAÇ KARAKTER YAZILAĞINI BELİRLER

--SELECT LEFT(DERSAD, 3) AS 'DERS ADI', LEFT(AVG(ORTALAMA),5) AS 'ORTALAMASI' FROM TBLNOTLAR INNER JOIN TBLDERSLER 
--ON TBLDERSLER.DERSID=TBLNOTLAR.OGRDERS GROUP BY LEFT(DERSAD, 3)

--LEN->LENGTH TOPLAM KARAKTER UZUNLUĞUNU VERİR.

--SELECT * FROM TBLOGRENCILER WHERE LEN(OGRAD+OGRSOYAD)>=3 OR LEN(OGRAD+OGRSOYAD)<=11

--ltrim, rtrim, replace

--SELECT LTRIM('   Seni çok özledim.') AS 'SOLDAKİ BOŞLUK'--SOLDAKİ BOŞLUĞU KALDIRIR.
--SELECT RTRIM('Seni çok özledim.   ')AS 'SAĞDAKİ BOŞLUK' --SAĞDAKİ BOŞLUĞU KALDIRIR.
--SELECT REPLACE('Seni çok özledim', 'çok','çök')
----1. PARAMETRE--> KELİME VE CÜMLE
----2. PARAMETRE--> DEĞİŞECEK İFADE
----3. PARAMETRE--> YERİNE GELECEK İFADE
--SELECT REPLACE('Seni çok özledim', 'e','a')

--SELECT REPLACE(REPLACE('DOĞRULDUM.', 'Ğ' ,'U'), 'M','N')--İKİ KARAKTERİ DEĞİŞTİRMEK 
----İSTEDİĞİMİZ İÇİÇE YAZARIZ.

--ALIŞTIRMALAR
--SELECT SUBSTRING(OGRAD, 1,1)+'. '+OGRSOYAD AS 'ÖĞRENCİ ADI SOYADI',
-- ORTALAMA FROM TBLNOTLAR INNER JOIN TBLOGRENCILER ON TBLOGRENCILER.OGRID=TBLNOTLAR.OGRENCIAD
--  WHERE OGRDERS=(SELECT ID FROM TBLDERSLER WHERE DERSAD='MATEMATİK')

----CHARINDEX(KARAKTERİN İNDEXİNİ ALIR), REVERSE(TERS YAZDIRMA)
--SELECT CHARINDEX('A','KORKMA SÖNMEZ BU ŞAFAKLAKLARDA YÜZEN AL SANCAK!')
----A KARAKTERİNİN İLK KAÇINCI SIRADA GEÇTİĞİNİ BULUR
--SELECT CHARINDEX('A','KORKMA SÖNMEZ BU ŞAFAKLAKLARDA YÜZEN AL SANCAK!',7)
----A KARAKTERİNİN 7. SIRADAN SONRA İLK NEREDE GEÇTİĞİNİ BULUR
--SELECT CHARINDEX('E', OGRAD) FROM TBLOGRENCILER
--SELECT REVERSE(KULUPAD) FROM TBLKULUPLER

--DDL ALIŞTIRMALAR

--CREATE DATABASE SatisVT

--USE SatisVT

--CREATE TABLE TBLKATEGORI
--(
--	KATEGORIID tinyint identity(1,1) primary key,
--	KATEGORIAD varchar(50),

--)

-- CREATE TABLE TBLURUNLER
-- (
--	URUNID int identity(1,1) primary key,
--	URUNAD varchar(50),
--	URUNMARKA varchar(50),
--	KATEGORI tinyint,
--	URUNALISFIYAT DECIMAL(18,2),
--	URUNSATISFIYAT DECIMAL(18,2),
--	URUNSTOK smallint CHECK(URUNSTOK>0),
--	URUNDURUM bit default '1'
-- )

-- CREATE TABLE TBLPERSONEL
-- (
--	PERSONELID smallint identity(1,1) primary key,
--	PERSONELADSOYAD varchar(50),
-- )

-- CREATE table TBLMUSTERI
-- (
--	MUSTERIID int identity(1,1) primary key,
--	MUSTERIAD varchar(20),
--	MUSTERISOYAD varchar(20),
--	MUSTERISEHIR varchar(30),
--	MUSTERIBAKIYE DECIMAL(18,2)
-- )

-- CREATE TABLE TBLHAREKET
-- (
--	HAREKETID int identity(1,1) primary key,
--	URUN int,
--	MUSTERI int,
--	PERSONEL smallint,
--	ADET int,
--	TUTAR DECIMAL(18,2),
--	TARIH SMALLDATETIME
-- 
--UPDATE VE SELECT ALIŞTIRMALARI
--UPDATE TBLURUNLER SET URUNALISFIYAT+=200 WHERE KATEGORI=(SELECT KATEGORIID FROM TBLKATEGORI WHERE KATEGORIAD='BİLGİSAYAR')
--UPDATE TBLURUNLER SET URUNSATISFIYAT+=(URUNSATISFIYAT*50/100) WHERE URUNMARKA='BOSCH'
----ODEVDİ. BOSHC MARKASINA AİT ÜRÜNLERİN FİYATINI URUN SATIŞ FİYATI ÜZERİNDEN YÜZDE 50 ARTIR.
--SELECT KATEGORIAD AS 'KATEGORİLER', SUM(URUNSTOK) AS 'TOPLAM SAYI' FROM TBLURUNLER INNER JOIN TBLKATEGORI 
--ON TBLKATEGORI.KATEGORIID=TBLURUNLER.KATEGORI GROUP BY KATEGORIAD ORDER BY SUM(URUNSTOK) ASC 
--SELECT URUNMARKA AS 'MARKALAR', SUM(URUNSTOK) AS 'TOPLAM SAYI' FROM TBLURUNLER GROUP BY URUNMARKA ORDER BY SUM(URUNSTOK) DESC
--UPDATE TBLURUNLER SET URUNSATISFIYAT+=(URUNSATISFIYAT*25/100) WHERE ((URUNSATISFIYAT-URUNALISFIYAT)*URUNSTOK)<10000
----TOPLAM KARI 10000 LİRANIN ALTINDA OLAN ÜRÜNLERİN SATIŞ FİYATINI YÜZDE 25 ARTIR
--SELECT KATEGORIAD, URUNAD, URUNMARKA, URUNALISFIYAT, URUNSATISFIYAT, URUNSTOK, (URUNSATISFIYAT-URUNALISFIYAT) AS 'ADET KARI',
--	(URUNSATISFIYAT-URUNALISFIYAT)*URUNSTOK AS 'TOPLAM KAR' FROM TBLURUNLER INNER JOIN TBLKATEGORI ON TBLKATEGORI.KATEGORIID=TBLURUNLER.KATEGORI 


-->PROCEDURE
--CREATE PROCEDURE HAREKET
--AS--AŞAĞIDAKİ SORGUYU YAZDIKTAN SONRA SADECE BURAYI YAZIYORUZ.
--SELECT HAREKETID,URUNAD,MUSTERIAD, PERSONELADSOYAD, ADET, TUTAR, TARIH FROM TBLHAREKET
--INNER JOIN TBLURUNLER ON TBLURUNLER.URUNID=TBLHAREKET.URUN
--INNER JOIN TBLMUSTERI ON TBLMUSTERI.MUSTERIID=TBLHAREKET.MUSTERI
---INNER JOIN TBLPERSONEL ON TBLPERSONEL.PERSONELID=TBLHAREKET.PERSONEL
--EXECUTE HAREKET-- PROCEDURÜ ÇAĞIRMAK VEYA GÖRÜNTÜLEMEK İÇİN BU SORGUYU YAZIYORUZ.

-->PROCEDURE SİLME(DROP), GÜNCELLEME(ALTER) İŞLEMLERİ

--create proc satis
--as
--select * from TBLURUNLER WHERE URUNALISFIYAT>2000
--EXEC satis

--drop procedure satis-- siler


--ALTER PROCEDURE [dbo].[HAREKET]
--AS
--SELECT HAREKETID,URUNAD,LEFT(MUSTERIAD,'1'), PERSONELADSOYAD, ADET, TUTAR, TARIH FROM TBLHAREKET
--INNER JOIN TBLURUNLER ON TBLURUNLER.URUNID=TBLHAREKET.URUN
--INNER JOIN TBLMUSTERI ON TBLMUSTERI.MUSTERIID=TBLHAREKET.MUSTERI
--INNER JOIN TBLPERSONEL ON TBLPERSONEL.PERSONELID=TBLHAREKET.PERSONEL

--EXECUTE HAREKET

--procedure un kısaltması--

--CREATE PROC GOSTER
--AS
--SELECT URUNAD, URUNMARKA, URUNSTOK FROM TBLURUNLER

--EXECUTE GOSTER

--> DATEPART(QUARTER,2025-05-05)

--SELECT * FROM TBLHAREKET WHERE DATEPART(DAY, TARIH) BETWEEN 1 AND 3
--SELECT * FROM TBLHAREKET WHERE DATEPART(DAY, TARIH) BETWEEN 1 AND 4
--AND MUSTERI=(SELECT MUSTERIID FROM TBLMUSTERI WHERE MUSTERISEHIR='MALATYA')

-->DATENAME
--SELECT DATENAME(MONTH,GETDATE()) AS 'AY'--1.parametre tarih türü ikincisi tarih. getdate bugunün tarihi demek
--SELECT DATENAME(WEEKDAY, '2019.11.17') AS 'GÜN'--BU TARİH HAFTANIN HANGİ GÜNÜDÜR.
--SELECT DATENAME(WEEK,'2018.05.06') AS 'HAFTA' -- BU TARİH YILIN KAÇINCI HAFTASIDIR.

-->DATEDIFF
--iki tarih arasındaki farkı verir
--SELECT DATEDIFF(YEAR, '1989.06.07',GETDATE()) as 'BENİM YAŞIM'--1. paremetre tarih türü, 2. başlangıç, 3. bitiş tarihi.
--SELECT DATEDIFF(DAY, TARIH, GETDATE()) FROM TBLHAREKET WHERE HAREKETID=1

-->DATEADD 
-- Tarihin üzerine ekleyerek başka bir tarih verir.

--SELECT DATEADD(MONTH,50,GETDATE()) AS '50 AY SONRAKİ TARİH'

-->ALT SORGULAR
--URUNADINA GÖRE YAPILAN HARCAMALARIN SAYISINI Z DEN A YA VEREN SORGU
--SELECT URUNAD , COUNT(*) FROM TBLHAREKET INNER JOIN TBLURUNLER
--ON TBLURUNLER.URUNID=TBLHAREKET.URUN GROUP BY URUNAD  ORDER BY URUNAD DESC

----BİLGİSAYAR İLE İLGİLİ YAPILAN HARCAMALAR
-- SELECT * FROM TBLHAREKET WHERE URUN IN(SELECT URUNID FROM TBLURUNLER
-- WHERE KATEGORI=(SELECT KATEGORIID FROM TBLKATEGORI WHERE KATEGORIAD='BİLGİSAYAR
--ŞEHRİ MUĞLA OLAN MÜŞTERİLERİN TOPLAM HARCAMALARI
--SELECT LEFT(MUSTERIAD,1)+'. '+MUSTERISOYAD  AS 'MÜŞTERİ ADI SOYADI',(ADET*TUTAR) AS 'HARCAMALAR'  FROM TBLHAREKET INNER JOIN
--TBLMUSTERI ON TBLMUSTERI.MUSTERIID=TBLHAREKET.MUSTERI
-- WHERE MUSTERI=(SELECT MUSTERIID FROM TBLMUSTERI WHERE MUSTERISEHIR='MUĞLA')
----BUZDOLABINA AİT TOPLAM HARCAMALAR
--SELECT URUN AS 'BUZ DOLABINA AİT HARCAMALAR', (TUTAR*ADET) AS 'HARCAMALAR' FROM TBLHAREKET WHERE URUN IN(SELECT URUNID FROM TBLURUNLER WHERE KATEGORI=(
--SELECT KATEGORI FROM TBLKATEGORI WHERE KATEGORIAD='BİLGİSAYAR'))
----ODEV BİLGİSAYAR KATEGORİSİNDE HARCAMA YAPMIŞ MÜSTERİLERİN TOPLAM BAKİYELERİ
--SELECT MUSTERIAD+' '+ MUSTERISOYAD AS 'MUSTERI ADI SOYADI', MUSTERIBAKIYE-(ADET*TUTAR) AS 'MÜSTERİ BAKİYESİ' FROM TBLHAREKET
--INNER JOIN TBLMUSTERI ON TBLMUSTERI.MUSTERIID=TBLHAREKET.MUSTERI WHERE URUN IN(SELECT URUNID FROM TBLURUNLER WHERE KATEGORI=
--(SELECT KATEGORIID FROM TBLKATEGORI WHERE KATEGORIAD='BİLGİSAYAR'))
--SELECT SUM(TUTAR) FROM TBLHAREKET WHERE MUSTERI IN(SELECT MUSTERIID FROM TBLMUSTERI WHERE MUSTERISEHIR  IN('TOKAT','MALATYA','MUĞLA'))
--UPDATE TBLURUNLER SET URUNSTOK=URUNSTOK-(SELECT SUM(ADET) FROM TBLHAREKET WHERE URUN=6)
--WHERE URUNID=6
--INSERT INTO TBLKASA VALUES(0)
--UPDATE TBLKASA SET TOPLAM=(SELECT SUM(TUTAR) FROM TBLHAREKET

--TRIGGER(TETİKLEYİCİ)
--> BİR TABLODA İŞLEM YAPILDIĞINDA YAPILAN İŞLEME GÖRE AYNI ANDA BAŞKA BİR
--TABLODADA İSLEMİ YAZILAN TRIGGERA GÖRE YAPTIRMA İŞİDİR.
--UPDATE TBLSAYAC SET ISLEM=(SELECT COUNT(*) FROM TBLHAREKET)

--CREATE TRIGGER ISLEMSAY--ISLEMSAY ADINDA TRIGGER OLUŞTUR
--ON TBLHAREKET--TBLHAREKET TABLOSU ÜZERİNDE YAPILAN İŞLEMLERİ ESAS AL.
--AFTER INSERT--YAPILAN HER BİR INSERT İŞLEMİNDE AŞAĞIDAKİ OLSUN
--AS--AŞAĞIDAKİ KOMUT OLSUN
--UPDATE TBLSAYAC SET ISLEM=ISLEM+1--TBLSAYAC TABLOSUNDAKİ İSLEM COLUMN UNU AL BİR ARTIR.

--SELECT * FROM TBLHAREKET
--SELECT * FROM TBLSAYAC
--UPDATE TBLKATEGORITOPLAM SET KATTOPLAM=(SELECT COUNT(*) FROM TBLKATEGORI)
----INSERT INTO TBLKATEGORITOPLAM VALUES(0)
--ALTER TRIGGER KATEGORTOP
--ON TBLKATEGORI
--AFTER INSERT
--AS
--UPDATE TBLKATEGORITOPLAM SET KATTOPLAM+=1

--CREATE TRIGGER KATCIKAR
--ON TBLKATEGORI
--AFTER DELETE
--AS
--UPDATE TBLKATEGORITOPLAM SET KATTOPLAM-=1

--> VİEW
--VİEWLAR TABLOLARI HAFIZADA TUTAR. UZUN SORGULARIN ÖNÜNE GEÇER
--OLUŞTURMA
--CREATE VIEW TEST1
--AS
--SELECT KATEGORIID, LEFT(KATEGORIAD,3)+'.' AS 'KATEGORİ ADI' FROM TBLKATEGORI WHERE KATEGORIID IN(1,2,3,4) 

----KULLANIMI
--SELECT * FROM TEST1--(SELECT KATEGORIID, LEFT(KATEGORIAD,3)+'.' AS 'KATEGORİ ADI' FROM TBLKATEGORI WHERE KATEGORIID IN(1,2,3,4))
----YEŞİL SORGU YERİNE SADECE TEST1 YAZIYORUZ.


--TSQL

-->DEĞİŞKENLER

--Değişkenleri tanımlarken başına @ sembolü gelir

--DECLARE @ADI varchar(20)
--set @ADI='CENGİZ'
--SELECT @ADI

--DECLARE @sayi1 int, @sayi2 int, @toplam int
--set @sayi1=20
--set @sayi2=30
--SET @toplam=@sayi1+@sayi2
--SELECT @toplam

--DECLARE @sayi3 decimal(18,2), @sayi4 decimal(18,2), @ortalama decimal(18,2)
--set @sayi3=55
--set @sayi4=60
--set @ortalama=(@sayi3+@sayi4)/2
--SELECT  @ortalama

--> TABLO İÇİNDE DEĞİŞKENLER
--DECLARE @ENFAZLA int
--SELECT @ENFAZLA=MAX(URUNSTOK) FROM TBLURUNLER
----TBLURUNLER TABLOSUNDAKİ MAX URUNSTOĞU OLANI ENFAZLA DEĞİŞKENİNE ATA
--SELECT * FROM TBLURUNLER WHERE URUNSTOK=@ENFAZLA
----TABLODAKİ URUNSTOKU EN FAZLA OLAN ÜRÜNÜN ÖZELLİKLERİNİ GETİR7

-->PRINT KULLANIMI
--CONSOLO YAZDIRMA İÇİN KULLANILIR. TABLO HALİNDE DEĞİLDİR.
--PRINT 'MERHABE CENGİZ'
--DECLARE @s1 int
--Select @s1=max(tutar) from TBLHAREKET
--print 'MAKSİMUM TUTAR'
--print '--------------'
--print @s1

---->TABLO TİPİ DEĞİŞKENLER
----Tablo sınıfından bir değişken oluşturup o değişken
----üzerinden kaydedilmemiş hayali bir tablo oluşturuyoruz.

--DECLARE @KISILER TABLE
--(
--    KISIID int identity,
--	KISIAD varchar(20),
--	KISISEHIR varchar(20)
--)

--insert into @KISILER (KISIAD,KISISEHIR) VALUES('CENGİZ','TOKAT')
--insert into @KISILER (KISIAD, KISISEHIR) VALUES('SELİM', 'MALATYA')

--SELECT * FROM @KISILER

--HAYALİ TABLOYU BİR PROCEDURE İÇİNDE TUTUP İSTENDİĞİNDE ÇAĞIRABİLİRİZ
--CREATE PROC TABLO
--AS
--DECLARE @MEMLEKETLER TABLE
--(
--	ID tinyint identity(5,3),
--	MEMLEKETAD varchar(50),
--	MEMLEKETPLAKA char(2)
--)

--insert into @MEMLEKETLER (MEMLEKETAD, MEMLEKETPLAKA) VALUES('İSTANBUL', '34')
--insert into @MEMLEKETLER (MEMLEKETAD, MEMLEKETPLAKA) VALUES('ANKARA', '06')

--SELECT * FROM @MEMLEKETLER

--EXECUTE TABLO

--DROP PROCEDURE TABLO

-->IF ELSE YAPISI
--DECLARE @s varchar(50), @toplamurun varchar(50) , @yb varchar(50)
--set @s=2
--select @toplamurun=sum(urunstok) from tblurunler
--set @yb=100
--if(@s>5)
--print @s +' 5 ten büyüktür'
--else
--print @s+' 5 ten küçüktür.'

--if @toplamurun>@yb
--print @toplamurun+ ' 100 den büyüktür'
--else
--print @toplamurun+ ' 100 den küçüktür.'

-->CASE YAPISI WHEN THEN

--SELECT URUNAD, URUNMARKA, URUNDURUM=
--CASE URUNDURUM--CASE KISMI DEĞİŞKENİN NEREDEN ALINACAĞINI BİLDİRİR.
--WHEN 1 THEN 'ÜRÜN VAR'-- WHEN TIPKI CASE GİBİ BU OLDUĞUNDA THEN DE OLACAK
----ŞEYİ SÖYLER
--WHEN 0 THEN 'ÜRÜN YOK'
--END
-- FROM TBLURUNLER

-- CASE DEĞİŞKENSİZ ÇOKLU DURUM

--SELECT URUNAD, URUNMARKA, URUNSTOK, URUNSTOK=--URUNSTOK AŞAĞIDAKİ DURUMDA THEN DEN SONRAKİ 
----DURUMA ATA
--CASE-- AŞAĞIDAKİ DURUMLAR BELİRSİZ OLDUĞU İÇİN DEĞİŞKEN ATAMADIK
--WHEN URUNSTOK>=0 AND URUNSTOK<=10 THEN 'YETERSİZ'
--WHEN URUNSTOK>=11 AND URUNSTOK<=20 THEN 'KISMEN YETERLİ'
--WHEN URUNSTOK>=21 THEN 'YETERLİ'
--END
--FROM TBLURUNLER 

--> WHILE DÖNGÜSÜ

--DECLARE @i int
--set @i=1
--while @i<=10 --@i 10 dan küçük eşit olana kadar
--begin--başla
--print @i--@i yi yaz
--set @i=@i+1--@i 10 olana kadar @i yi bir bir artırarak yaz
--end--bitir

--DECLARE @toplam int, @sayac int
--set @sayac=1
--set @toplam=0
--while @sayac<=10
--begin
--set @toplam=@toplam+@sayac
--set @sayac+=1
--end
--print '1 ile 10 sayıları arasındaki sayıların toplamı'
--print @toplam


--SELECT AVG(URUNSATISFIYAT-URUNALISFIYAT) FROM TBLURUNLER
--while (SELECT AVG(URUNSATISFIYAT-URUNALISFIYAT) FROM TBLURUNLER)<=500
--begin 
--UPDATE TBLURUNLER SET URUNSATISFIYAT+=URUNSATISFIYAT*10/100
--end
--SELECT AVG(URUNSATISFIYAT-URUNALISFIYAT) FROM TBLURUNLER

--SELECT SUM(URUNSTOK) FROM TBLURUNLER
--while(SELECT SUM(URUNSTOK) FROM TBLURUNLER)<=150
--begin
--UPDATE TBLURUNLER SET URUNSTOK+=1
--end
--SELECT SUM(URUNSTOK) FROM TBLURUNLER

--> WAITFOR DELAY YAPISI(ERTELEYİCİ)
--waitfor delay '00:00:05'
----Aşağıdaki işlemi kırmızı kısımdaki miktar kadar erteleyerek yapar.
--select * from TBLURUNLER
