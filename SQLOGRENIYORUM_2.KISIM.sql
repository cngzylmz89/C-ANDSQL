--USE DbYeni

--UPDATE TBLSTOK SET TOPLAMURUN=( SELECT COUNT(*) FROM TBLURUN)
--SELECT * FROM TBLSTOK
--CREATE TRIGGER ARTTIR
--ON TBLURUN
--AFTER INSERT
--AS
--UPDATE TBLSTOK SET TOPLAMURUN=(SELECT SUM(STOK) FROM TBLURUN)

--DROP TRIGGER ARTTIR

--CREATE TRIGGER ARTTIR
--ON TBLURUN
--AFTER INSERT
--AS
--DECLARE @STOKSAYI int
--SELECT @STOKSAYI=STOK FROM inserted
----Yukarýdaki toplada insert iþlemi gerçekleþtiðinde deðiþkeni bu
----sütuna ata
--UPDATE TBLSTOK SET TOPLAMURUN+=@STOKSAYI
----TBLSTOK taplosundaki TOPLAMURUN sütununa @STOKSAYI DAN
----gelen deðeri ekle

--CREATE TRIGGER AZALT
--ON TBLURUN
--AFTER DELETE
--AS
--DECLARE @STOKAZALT int
--SELECT @STOKAZALT=STOK from deleted
--UPDATE TBLSTOK SET TOPLAMURUN-=@STOKAZALT

--use DbYeni

--CREATE TABLE TBLURUNDEL
--(
--	SILURUNID int primary key identity(1,1),
--	URUNAD varchar(20),
--	SILURUNALISFIYAT decimal(18,2),
--	SILURUNSATISFIYAT decimal(18,2),
--	SILSTOK int
--)

--CREATE TRIGGER URUNSIL
--ON TBLURUN
--AFTER DELETE
--AS
--DECLARE @URUNAD varchar(29), @URUNALIS decimal(18,2), @URUNSATIS decimal(18,2), @URUNSTOK int
--SELECT @URUNAD=AD, @URUNALIS=ALISFIYAT, @URUNSATIS=SATISFIYAT, @URUNSTOK=STOK  FROM deleted
--INSERT INTO TBLURUNDEL (URUNAD, SILURUNALISFIYAT,SILURUNSATISFIYAT,SILSTOK) VALUES(@URUNAD, @URUNALIS, @URUNSATIS, @URUNSTOK)


--TRANSACTION --ÝÞLEMLERÝ BÝR HATA OLMAMASI DURUMUNDA
--GERÇEKLEÞTÝREN YAPIDIR. ROLLBACK VE COMMIT KOMUTLARI
-- ÝLE GERÇEKLEÞÝR. HATA VARSA ROLLBACK ÝLE GERÝ ALIR.
-- HATA YOKSA COMMIT ÝLE GERÇEKLEÞTÝRÝR.

--BEGIN TRANSACTION
--UPDATE TBLURUN SET STOK+=50 WHERE URUNID=1
--UPDATE TBLURUN SET ALISFIYAT='BEÞYÜZ' WHERE URUNID=1
----ALISFIYAT DECIMAL OLDUÐU ÝÇÝN HATA VERDÝ VE EKLEMEDÝ
--SELECT * FROM TBLURUN--ÖNCE EKLEDÝ
--COMMIT--HATA YOKSA YAPAR. HATA VARSA HÝÇBÝRÝNÝ YAPMAZ
--SELECT * FROM TBLURUN --EKLEMEMÝÞ

-->FUNCTION belirli iþlemleri parametre oluþturarak
--yaptýðýmýz yapýlardýr. C# ta yapýcý metotlara benzer

--CREATE FUNCTION DEGERARTTIR(@DEGER int)
----degerarttýr functýon ý int türünde @deger adýnda
----bir parametreyle oluþturduk
--RETURNS INT--int türünde deðer döndürecek
--AS
--BEGIN
--RETURN @DEGER+20--ne olacaðýný burada yazýyoruz.
--END

--select AD,STOK,DBO.DEGERARTTIR(STOK) AS 'YENÝ STOK' FROM TBLURUN
----functýon ýn adýný yazarak içine parametreyi yazýyoruz.

--CREATE FUNCTION ODEV(@KAREKOK int)
--RETURNS int
--AS
--BEGIN
--RETURN SQRT(@KAREKOK)*3
--END

--SELECT AD, STOK, DBO.ODEV(STOK) FROM TBLURUN


-->STRING TÜRDE FONKSÝYON
--CREATE FUNCTION KUCUKHARF(@KUCUK varchar(20))
--RETURNS varchar(20)
--AS
--BEGIN
--RETURN LOWER(@KUCUK) 
--END

--SELECT DBO.KUCUKHARF(AD), AD STOK FROM TBLURUN

-->TABLO SONUÇLU FUNCTION
--CREATE FUNCTION URUN(@URID int)
--RETURNS TABLE--Tabloyu dönderecek
--AS
--RETURN SELECT * FROM TBLURUN WHERE URUNID=@URID
----BU tabloyu dönder.

--SELECT * FROM DBO.URUN(1)

--ÖDEV
--CREATE FUNCTION STOKALTI(@STK int)
--RETURNS TABLE
--AS
--RETURN SELECT AD, STOK FROM TBLURUN WHERE STOK<@STK
----STOK sayýsý @STK nýn altýnda olanlarý listele

--SELECT * FROM DBO.STOKALTI(50)

--WHILE DÖNGÜSÜ ÝLE ÖRNEK TABLODAN 250 BÝN VERÝLÝ TABLE OLUÞTURMA

 --DECLARE @IDD int, @IDDD int
 --,@URUNAD varchar(20),@URUNALISFIYAT decimal(18,2),@URUNSATISFIYAT decimal(18,2), @STOK smallint,@DURUM bit,
 --@KATEGORI int
 --set @IDD=0
 --set @IDDD=5
 --while(@IDD<250000)
 --begin
 --SELECT @URUNAD=AD FROM TBLURUNORNEK WHERE URUNID=@IDD%@IDDD
 --SELECT @URUNALISFIYAT=ALISFIYAT FROM TBLURUNORNEK WHERE URUNID=@IDD%@IDDD  
 --SELECT @URUNSATISFIYAT=SATISFIYAT FROM TBLURUNORNEK WHERE URUNID=@IDD%@IDDD
 --SELECT @STOK=STOK FROM TBLURUNORNEK WHERE URUNID=@IDD%@IDDD
 --SELECT @DURUM=1 FROM TBLURUNORNEK WHERE URUNID=@IDD%@IDDD
 --SELECT @KATEGORI=KATEGORI FROM TBLURUNORNEK WHERE URUNID=@IDD%@IDDD
 --INSERT INTO TBL250BINURUN(ID,URUNAD,ALISFIYAT,SATISFIYAT,STOK,DURUM,KATEGORI) VALUES(@IDD,@URUNAD,@URUNALISFIYAT,@URUNSATISFIYAT,@STOK,1,@KATEGORI)
 --set @IDD+=1
 --end
 --SELECT COUNT(*) FROM TBL250BINURUN

 --DECLARE @IDD int, @KÝTAPAD varchar(20)
 --set @IDD=0
 --while @IDD<250000
 --begin
 --UPDATE TBL250BINURUN SET KITAPAD='KÝTAP'+ CAST(@IDD AS varchar(20)) 
 --SET @IDD+=1 
 --end

 --SET STATISTICS IO ON--SORGULAMAYA AÝT ÝSTATÝSTÝÐÝ GÖSTERÝR
 --SET STATISTICS TIME ON--SORGULAMANIN NE KADAR ZAMANDA YAPILDIÐINI GÖSTERÝR.

 --SELECT * FROM TBL250BINURUN WHERE ID=249215





 --CREATE NONCLUSTERED INDEX ARA
 --ON TBL250BINURUN(ID, KATEGORI)
 ----NON CLUSTERED BÝR KÜMELEME ÝLE BÝRDEN ÇOK SÜTUNU
 ----DEVREYE SOKARAK KÜMELE YAPABÝLÝRÝZ.

 --CREATE CLUSTERED INDEX ARABIR
 --ON TBL250BINURUN(ID)